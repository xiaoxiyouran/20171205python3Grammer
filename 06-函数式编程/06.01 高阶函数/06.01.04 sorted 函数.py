#!/usr/bin/env python3
# -*- coding: utf-8 -*-
###-----------------------------------------------------------------------------------------------------------------  class(begin)
### TODO: 默认的sorted 函数
print( sorted([36, 5, -12, 9, -21]) ) # [-21, -12, 5, 9, 36]
###=================================================================================================================


###-----------------------------------------------------------------------------------------------------------------  class(begin)
### TODO: sorted()函数也是一个高阶函数，它还可以接收一个key函数来实现自定义的排序，例如按绝对值大小排序
# key指定的函数将作用于list的每一个元素上，并根据key函数返回的结果进行排序。
print( sorted([36, 5, -12, 9, -21], key=abs) ) # [5, 9, -12, -21, 36]
###=================================================================================================================

###-----------------------------------------------------------------------------------------------------------------  class(begin)
### TODO: 字符串排序
print( sorted(['bob', 'about', 'Zoo', 'Credit']) ) # ['Credit', 'Zoo', 'about', 'bob']

# 忽略大小写的排序，都变成大写或者小写
print(  sorted(['bob', 'about', 'Zoo', 'Credit'], key=str.lower) ) # ['about', 'bob', 'Credit', 'Zoo']

# 要进行反向排序，不必改动key函数，可以传入第三个参数reverse=True：
print( sorted(['bob', 'about', 'Zoo', 'Credit'], key=str.lower, reverse=True) ) # ['Zoo', 'Credit', 'bob', 'about']

###=================================================================================================================

###-----------------------------------------------------------------------------------------------------------------  class(begin)
### TODO: 练习
# 假设我们用一组tuple表示学生名字和成绩：
# L = [('Bob', 75), ('Adam', 92), ('Bart', 66), ('Lisa', 88)]
# 请用sorted()对上述列表分别按名字排序：
L = [('Bob', 75), ('Adam', 92), ('Bart', 66), ('Lisa', 88)]
def by_name(t):
    return t[0]

L2 = sorted(L, key=by_name) # 会作用于每一个元组
print(L2)

# 按成绩从高到低排序(加负号即可)
def by_score(t):
    return -t[1]

L2_score = sorted(L, key=by_score) # 会作用于每一个元组 or L2_score = sorted(L, key=by_score,reverse = True)
print(L2_score)

# 用lambda 函数
L = [('Bob',75),('Adma',92),('Bart',66),('Lisa',88)]
res = sorted(L,key=lambda x: x[1],reverse=True)
print( res ) # [('Adma', 92), ('Lisa', 88), ('Bob', 75), ('Bart', 66)]
###=================================================================================================================


