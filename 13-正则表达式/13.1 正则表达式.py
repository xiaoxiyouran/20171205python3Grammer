
import  re
print( re.match(r'^\d{3}\-\d{3,8}','010-12345') )
# <_sre.SRE_Match object; span=(0, 9), match='010-12345'> # 匹配成功,就返回一个Match对象

print( re.match(r'^\d{3}\-\d{3,8}$', '010 12345') ) # 不匹配,返回None


# [0-9a-zA-Z\_]可以匹配一个数字、字母或者下划线；
#
# [0-9a-zA-Z\_]+可以匹配至少由一个数字、字母或者下划线组成的字符串，比如'a100'，'0_Z'，'Py3000'等等；
#
# [a-zA-Z\_][0-9a-zA-Z\_]*可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；
#
# [a-zA-Z\_][0-9a-zA-Z\_]{0, 19}更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）。
#
# A|B可以匹配A或B，所以(P|p)ython可以匹配'Python'或者'python'。
#
# ^表示行的开头，^\d表示必须以数字开头。
#
# $表示行的结束，\d$表示必须以数字结束。
#
# 你可能注意到了，py也可以匹配'python'，但是加上^py$就变成了整行匹配，就只能匹配'py'了。

test = '20123618'
if re.match(r'^2012\d+',test ):
    print( 'ok' )
else:
    print( 'failed' )

